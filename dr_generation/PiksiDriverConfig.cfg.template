#!/usr/bin/env python

PACKAGE='piksi_ros'
import roslib; roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator_catkin import *

{{root_group}} = ParameterGenerator()

piksi = {{root_group}}.add_group('piksi')

{% for enum in enums %}
{{ enum.name }} = {{root_group}}.enum([
{% for field in enum.fields %}
{{root_group}}.const("{{ field.name }}",      {{field.type}}, {{field.index}}, "{{field.desc}}"),
{% endfor %}],
"{{ enum.desc }}")
{% endfor %}


{% for group in groups %}
{{ group.name }} = piksi.add_group("{{ group.name }}")
{% endfor %}

{% for param in params %}
{{param.group}}.add("piksi__{{param.group}}__{{param.name}}",            {{param.type}},   {{param.level}}, "{{ param.desc}}", default={{ param.default}}{% if param.enum_name %}, edit_method={{param.enum_name}}{% endif %}{% if param.max is defined %}, max={{param.max}}{% endif %}{% if param.min is defined %}, min={{param.min}}{% endif %})
{% endfor %}

exit(gen.generate(PACKAGE, "piksi_driver", "PiksiDriver"))
